#version 450 core

layout (local_size_x = 16, local_size_y = 9, local_size_z = 1) in;

layout (set = 0, binding = 0) uniform Camera {
    mat4 view;
    mat4 proj;
    mat4 inverseView;
    mat4 inverseProj;
} camera;

layout (set = 1, binding = 0) buffer RayDirections {
    vec3 direction[];
} rayDirections;

layout (set = 1, binding = 1) uniform Screen {
    int width;
    int height;
} screen;

void main() {
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    if (x >= screen.width || y >= screen.height) {
        return;
    }

    vec2 uv = vec2(x, y) / vec2(screen.width, screen.height);
    vec2 ndc = uv * 2.0 - 1.0;

    vec4 target = camera.inverseProj * vec4(ndc, 1.0, 1.0);
    vec3 direction = vec3(camera.inverseView * vec4(normalize(vec3(target) / target.w), 0));

    rayDirections.direction[y * screen.width + x] = direction;
}
